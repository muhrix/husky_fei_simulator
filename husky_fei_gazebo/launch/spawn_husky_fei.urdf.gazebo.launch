<?xml version="1.0"?>
<launch>
    <!-- <param name="use_sim_time" value="true" /> -->
    <arg name="robot_name" default="husky_fei"/>
    <arg name="pos_x" default="0.0"/>
    <arg name="pos_y" default="0.0"/>
    <arg name="pos_z" default="0.0"/>
    <arg name="rot_r" default="0.0"/>
    <arg name="rot_p" default="0.0"/>
    <arg name="rot_y" default="0.0"/>
    <!-- GPS latitude and longitude (heading should be 90.0) default to Fukushima
    <arg name="lat_ref" default="37.316357"/>
    <arg name="lon_ref" default="141.026065"/> -->
    <!-- GPS latitude and longitude (heading is rot_y) default to Battersea Power Station
    <arg name="lat_ref" default="51.481779"/>
    <arg name="lon_ref" default="-0.144564"/> -->
    <!-- GPS latitude and longitude (heading is rot_y) default to London Olympic Park -->
    <arg name="lat_ref" default="51.538425"/>
    <arg name="lon_ref" default="-0.012641"/>

    <!-- push robot_description to factory and spawn model into Gazebo -->
    
    <!-- Send the Husky A200 Robot URDF/XACRO to param server -->
    <param name="robot_description"
           command="$(find xacro)/xacro.py 
                    '$(find husky_fei_description)/urdf/husky_fei.urdf.xacro'
                    prefix:=$(arg robot_name)
                    lat:=$(arg lat_ref)
                    lon:=$(arg lon_ref)
                    head:=0.0"/>
    
    <!-- Spawn robot in gazebo -->
    <node name="spawn_husky_fei_model" pkg="gazebo_ros" type="spawn_model"
          args="-param robot_description
          -model $(arg robot_name)
          -unpause
          -urdf
          -x $(arg pos_x)
          -y $(arg pos_y)
          -z $(arg pos_z)
          -R $(arg rot_r)
          -P $(arg rot_p)
          -Y $(arg rot_y)"
          respawn="false" output="screen" />

    <!-- publish state and tf -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"
          output="screen">
        <param name="publish_frequency" type="double" value="50.0" />
    </node>
    <!--
    <node pkg="tf" 
          type="static_transform_publisher" 
          name="$(arg robot_name)_initial_pose"
          args="$(arg pos_x) 
                $(arg pos_y) 
                $(arg pos_z) 
                $(arg rot_r) 
                $(arg rot_p) 
                $(arg rot_y)
                /map
                $(arg robot_name)_odom_combined
                100" />    
    -->
                
    <!-- odometry estimator -->
    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf" output="screen">
      <param name="output_frame" value="$(arg robot_name)_odom_combined"/>
      <param name="base_footprint_frame" value="$(arg robot_name)_base_footprint"/>
      <param name="publish_tf" value="true"/>
      <param name="freq" value="30.0"/>
      <param name="sensor_timeout" value="1.0"/>
      <param name="odom_used" value="true"/>
      <param name="imu_used" value="true"/>
      <param name="vo_used" value="true"/>
      <param name="gps_used" value="false"/>
      <param name="debug" value="false"/>
      <param name="self_diagnose" value="false"/>
      
      <remap from="robot_pose_ekf/$(arg robot_name)_odom_combined" to="odom_combined"/>
    </node>
</launch>
